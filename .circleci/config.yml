version: 2.1

parameters:
  workflow_id:
    type: string
    default: '${CIRCLE_WORKFLOW_ID:0:7}'




jobs:
  deploy-infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: yum install -y tar gzip
      - run:
          name: Ensure back-end infrastructure exists
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --tags project=your-tag \
              --stack-name  prometheus_server-${CIRCLE_WORKFLOW_ID:0:7} \
              --parameter-overrides ID=${CIRCLE_WORKFLOW_ID:0:7}
      - run:
          name: Add back-end ip to ansible inventory
          command: |
            echo $(aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --filters Name=tag:aws:cloudformation:stack-name,Values=udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7} \
            --output text) >> ~/project/.circleci/ansible/inventory.txt

  add-prometheus-node-exporter:
    docker:
      - image: python:3.7-alpine3.16
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - '7f:37:87:0c:cb:42:bd:19:f6:22:79:1e:83:87:76:9c'
      - run:
          name: Install dependencies
          command: |
            apk add --update aws-cli tar gzip ansible nodejs npm
      - attach_workspace:
          at: ~/
      - run:
          name: Setup Prometheus Node Exporter
          command: |
            cd .circleci/ansible
            cat inventory.txt
            ansible-playbook -i inventory.txt node-exporter.yml
      - destroy-environment:
          workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}
      - revert-migrations:
          workflow_id: ${CIRCLE_WORKFLOW_ID:0:7}

workflows:
  default:
    jobs:
      - deploy-infrastructure
      - add-prometheus-node-exporter:
          requires: [deploy-infrastructure]


